<?php

namespace Telma\Selfcare\PrepaidBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    public function filterPagList($userLogin, $userNom, $userPrenom, $userStatus, $userCompanies, $debutDateSearch, $endDateSearch)
    {
        $dd = substr($debutDateSearch, 0, 2);
        $md = substr($debutDateSearch, 3, 2);
        $yd = substr($debutDateSearch, 6, 4);
        $debutDate = $yd . "-" . $md . "-" . $dd;
        // formatter date end
        $de = substr($endDateSearch, 0, 2);
        $me = substr($endDateSearch, 3, 2);
        $ye = substr($endDateSearch, 6, 4);
        $endDate = $ye . "-" . $me . "-" . $de;

        $queryBuilder = $this->createQueryBuilder('U');
        $queryBuilder->add('select', 'U');
        $queryBuilder->add('from', 'TelmaSelfcarePrepaidBundle:User U');


        if ($userCompanies != '') {
            $queryBuilder->innerJoin(' U.companies','c');
            $queryBuilder->where('c.id =:id');
            $queryBuilder->setParameter('id', $userCompanies);
        }

        if ($userLogin != '') {
            $queryBuilder->andWhere(' U.email LIKE :userLogin ');
            $queryBuilder->setParameter('userLogin', '%' . $userLogin . '%');
        }
        if ($userNom != '') {
            $queryBuilder->andWhere(' U.nom LIKE :userNom ');
            $queryBuilder->setParameter('userNom', '%' . $userNom . '%');
        }
        if ($userPrenom != '') {
            $queryBuilder->andWhere(' U.prenom LIKE :userPrenom ');
            $queryBuilder->setParameter('userPrenom', '%' . $userPrenom . '%');
        }
        if ($userStatus != '') {
            $queryBuilder->andWhere(' U.isValid = :isValid ');
            $queryBuilder->setParameter('isValid', $userStatus);
        }
        if ($debutDate != '' && $endDate != '') {
            $queryBuilder->andWhere(' ( U.createdAt BETWEEN :debutDate AND :endDate ) ');
            $queryBuilder->setParameter('debutDate', $debutDate);
            $queryBuilder->setParameter('endDate', $endDate);
        }
        var_dump($queryBuilder->getParameter('isValid'));
        $query = $queryBuilder->getQuery();
        $result = $query->getResult();
        return $result;
    }

}
